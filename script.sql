-- Drop All Created Tables
DROP TABLE RBILL;
DROP TABLE RBOOKITEM;
DROP TABLE FEEDBACK;
DROP TABLE BOOKING;
DROP TABLE EMPLOYEE;
DROP TABLE EMPLOYEETYPE;
DROP TABLE ROOM;
DROP TABLE ROOMPRICE;
DROP TABLE IMAGE;
DROP TABLE ROOMTYPE;
DROP TABLE CUSTOMER;
--

CREATE TABLE ROOMTYPE
(
    TYPE_NAME   VARCHAR2(20) PRIMARY KEY,
    DESCRIPTION VARCHAR2(120)
);

CREATE TABLE IMAGE
(
    IMAGE_NAME VARCHAR2(36) PRIMARY KEY,
    TYPE_NAME  VARCHAR(20),
    CONSTRAINT IMAGE_TYPE_NAME_FK FOREIGN KEY (TYPE_NAME)
        REFERENCES ROOMTYPE (TYPE_NAME)
);

CREATE TABLE ROOMPRICE
(
    DATE_FROM DATE,
    DATE_TO   DATE,
    PRICE     NUMBER(9) NOT NULL,
    TYPE_NAME VARCHAR(20),
    PRIMARY KEY (DATE_FROM, DATE_TO),
    CONSTRAINT ROOMPRICE_TYPE_NAME_FK FOREIGN KEY (TYPE_NAME)
        REFERENCES ROOMTYPE (TYPE_NAME)
);
-- todo change room type names
INSERT INTO ROOMPRICE
VALUES (TO_DATE('16-JAN-2022', 'DD-MON-YYYY'), TO_DATE('15-MAY-2022', 'DD-MON-YYYY'), 34999, 'eco-1');
INSERT INTO ROOMPRICE
VALUES (TO_DATE('16-MAY-2022', 'DD-MON-YYYY'), TO_DATE('15-AUG-2022', 'DD-MON-YYYY'), 44999, 'eco-1');
INSERT INTO ROOMPRICE
VALUES (TO_DATE('16-AUG-2022', 'DD-MON-YYYY'), TO_DATE('15-JAN-2022', 'DD-MON-YYYY'), 34999, 'eco-1');
INSERT INTO ROOMPRICE
VALUES (TO_DATE('16-JAN-2022', 'DD-MON-YYYY'), TO_DATE('15-MAY-2022', 'DD-MON-YYYY'), 64999, 'eco-2');
INSERT INTO ROOMPRICE
VALUES (TO_DATE('16-MAY-2022', 'DD-MON-YYYY'), TO_DATE('15-AUG-2022', 'DD-MON-YYYY'), 69999, 'eco-2');
INSERT INTO ROOMPRICE
VALUES (TO_DATE('16-AUG-2022', 'DD-MON-YYYY'), TO_DATE('15-JAN-2022', 'DD-MON-YYYY'), 64999, 'eco-2');
INSERT INTO ROOMPRICE
VALUES (TO_DATE('16-JAN-2022', 'DD-MON-YYYY'), TO_DATE('15-MAY-2022', 'DD-MON-YYYY'), 69999, 'large-1');
INSERT INTO ROOMPRICE
VALUES (TO_DATE('16-MAY-2022', 'DD-MON-YYYY'), TO_DATE('15-AUG-2022', 'DD-MON-YYYY'), 79999, 'large-1');
INSERT INTO ROOMPRICE
VALUES (TO_DATE('16-AUG-2022', 'DD-MON-YYYY'), TO_DATE('15-JAN-2022', 'DD-MON-YYYY'), 69999, 'large-1');
INSERT INTO ROOMPRICE
VALUES (TO_DATE('16-JAN-2022', 'DD-MON-YYYY'), TO_DATE('15-MAY-2022', 'DD-MON-YYYY'), 129999, 'large-2');
INSERT INTO ROOMPRICE
VALUES (TO_DATE('16-MAY-2022', 'DD-MON-YYYY'), TO_DATE('15-AUG-2022', 'DD-MON-YYYY'), 149999, 'large-2');
INSERT INTO ROOMPRICE
VALUES (TO_DATE('16-AUG-2022', 'DD-MON-YYYY'), TO_DATE('15-JAN-2022', 'DD-MON-YYYY'), 129999, 'large-2');
INSERT INTO ROOMPRICE

CREATE TABLE ROOM
(
    ID        VARCHAR(6),
    STATUS    VARCHAR2(8),
-- empty - occupied - service
    PHONE     NUMBER(7) NOT NULL UNIQUE,
-- 000 00 01...
    TYPE_NAME VARCHAR(20),
    PRIMARY KEY (ID),
    CONSTRAINT ROOM_TYPE_NAME_FK FOREIGN KEY (TYPE_NAME)
        REFERENCES ROOMTYPE (TYPE_NAME)
);

CREATE TABLE EMPLOYEETYPE
(
    TYPE_NAME VARCHAR(32) PRIMARY KEY,
    SALARY    NUMBER(8) NOT NULL
-- 15,000.00
);

CREATE TABLE EMPLOYEE
(
    ID         VARCHAR(6) PRIMARY KEY,
    FIRST_NAME VARCHAR2(16) NOT NULL,
    LAST_NAME  VARCHAR2(16) NOT NULL,
    GENDER     VARCHAR2(6) NOT NULL,
    BIRTH_DATE DATE NOT NULL,
    ADDRESS    VARCHAR2(60) NOT NULL,
    PHONE      NUMBER(10) NOT NULL UNIQUE,
    TYPE_NAME  VARCHAR(32),
    CONSTRAINT EMPLOYEE_TYPE_NAME_FK FOREIGN KEY (TYPE_NAME)
        REFERENCES EMPLOYEETYPE (TYPE_NAME)
);

CREATE TABLE CUSTOMER
(
    ID          VARCHAR(6) PRIMARY KEY,
    FIRST_NAME  VARCHAR2(16) NOT NULL,
    LAST_NAME   VARCHAR2(16) NOT NULL,
    GENDER      VARCHAR2(6) NOT NULL,
    BIRTH_DATE  DATE        NOT NULL,
    NATIONAL_ID VARCHAR(11) NOT NULL UNIQUE,
    ADDRESS     VARCHAR2(60) NOT NULL,
    PHONE       NUMBER(10) NOT NULL UNIQUE
);

CREATE TABLE FEEDBACK
(
    ID          VARCHAR(6) PRIMARY KEY,
    DESCRIPTION VARCHAR2(60),
    SCORE       NUMBER(1) NOT NULL,
    ROOM_ID     VARCHAR(6),
    EMPLOYEE_ID VARCHAR(6),
    CUSTOMER_ID VARCHAR(6),
    CONSTRAINT FEEDBACK_ROOM_ID_FK FOREIGN KEY (ROOM_ID)
        REFERENCES ROOM (ID) ON DELETE CASCADE,
    CONSTRAINT FEEDBACK_EMPLOYEE_ID_FK FOREIGN KEY (EMPLOYEE_ID)
        REFERENCES EMPLOYEE (ID) ON DELETE CASCADE,
    CONSTRAINT FEEDBACK_CUSTOMER_ID_FK FOREIGN KEY (CUSTOMER_ID)
        REFERENCES CUSTOMER (ID) ON DELETE CASCADE
);
-- todo check when rooms, employees and customers are added
INSERT INTO FEEDBACK
VALUES ('F-0001', 'This was many best holiday. Everything was great.', 5, 'R-0001', 'E-0001', 'C-0001');
INSERT INTO FEEDBACK
VALUES ('F-0002', 'Employer was not polite to me. Room was decent', 2, 'R-0002', 'E-0003', 'C-0002');
INSERT INTO FEEDBACK
VALUES ('F-0003', '-', 5, 'R-0005', 'E-0003', 'C-0003');
INSERT INTO FEEDBACK
VALUES ('F-0004', 'Room was not clear and the bed was squeaky.', 3, 'R-0004', 'E-0004', 'C-0004');
INSERT INTO FEEDBACK
VALUES ('F-0005', 'Bed should be replaced.', 2, 'R-0004', 'E-0003', 'C-0005');
INSERT INTO FEEDBACK
VALUES ('F-0006', 'Clean and warm room.', 5, 'R-0001', 'E-0001', 'C-0003');
INSERT INTO FEEDBACK
VALUES ('F-0007', 'Bed was not comfortable.', 3, 'R-0004', 'E-0005', 'C-0003');

CREATE TABLE BOOKING
(
    ID           VARCHAR(6) PRIMARY KEY,
    BOOKER_ID    VARCHAR(6) NOT NULL,
    BOOKING_DATE DATE       NOT NULL,
    ENTER_DATE   DATE       NOT NULL,
    EXIT_DATE    DATE       NOT NULL,
    EMPLOYEE_ID  VARCHAR(6) NOT NULL,
    CONSTRAINT BOOKING_EMPLOYEE_ID_FK FOREIGN KEY (EMPLOYEE_ID)
        REFERENCES EMPLOYEE (ID) ON DELETE CASCADE,
    CONSTRAINT BOOKING_CUSTOMER_ID_FK FOREIGN KEY (BOOKER_ID)
        REFERENCES CUSTOMER (ID) ON DELETE CASCADE
);

CREATE TABLE RBILL
(
    BOOKING_ID     VARCHAR(6),
    CUSTOMER_ID    VARCHAR(6),
    BILL_DATE      DATE       NOT NULL,
    PAID_DATE      DATE       NOT NULL,
    EXP_DATE       DATE       NOT NULL,
    PAYMENT_METHOD VARCHAR(8) NOT NULL,
    PRIMARY KEY (BOOKING_ID, CUSTOMER_ID),
    CONSTRAINT RBILL_CUSTOMER_ID_FK FOREIGN KEY (CUSTOMER_ID)
        REFERENCES CUSTOMER (ID) ON DELETE CASCADE,
    CONSTRAINT RBILL_BOOKING_ID_FK FOREIGN KEY (BOOKING_ID)
        REFERENCES BOOKING (ID) ON DELETE CASCADE
);

CREATE TABLE RBOOKITEM
(
    BOOKING_ID  VARCHAR(6),
    CUSTOMER_ID VARCHAR(6),
    PRIMARY KEY (BOOKING_ID, CUSTOMER_ID),
    CONSTRAINT RBOOKITEM_CUSTOMER_ID_FK FOREIGN KEY (CUSTOMER_ID)
        REFERENCES CUSTOMER (ID) ON DELETE CASCADE,
    CONSTRAINT RBOOKITEM_BOOKING_ID_FK FOREIGN KEY (BOOKING_ID)
        REFERENCES BOOKING (ID) ON DELETE CASCADE
);
